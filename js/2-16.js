function makeArray(firstArray, secondArray, maxLength) {
  // Пиши код ниже этой строки
  const arr = firstArray.concat(secondArray);

  if (arr.length > maxLength) {
    return arr.slice(0, maxLength);
  } else {
    return arr;
  }

  // Пиши код выше этой строки
}

makeArray(['Манго', 'Поли'], ['Аякс', 'Челси'], 3); // возвращает['Манго', 'Поли', 'Аякс'].
makeArray(['Манго', 'Поли', 'Хьюстон'], ['Аякс', 'Челси'], 4); // возвращает ['Манго', 'Поли', 'Хьюстон', 'Аякс'].
makeArray(['Манго'], ['Аякс', 'Челси', 'Поли', 'Хьюстон'], 3); // возвращает ['Манго', 'Аякс', 'Челси'].
makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 2); // возвращает ['Земля', 'Юпитер'].
makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 4); // возвращает ['Земля', 'Юпитер', 'Нептун', 'Уран'].
makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран', 'Венера'], 0); // возвращает [].

// Напиши функцию makeArray(firstArray, secondArray, maxLength) для создания нового массива со всеми элементами двух исходных firstArray и secondArray.
// Параметр maxLength содержит максимально допустимую длину нового массива.

// Если количество элементов нового массива больше maxLength, функция должна вернуть копию массива длиной maxLength элементов.

// В противном случае функция должна вернуть новый массив целиком.
